# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    client:
        enabled: false
    instance:
        appname: KafkaTest
        instanceId: KafkaTest:${spring.application.instance-id:${random.value}}

spring:
    kafka:
        bootstrap-servers: ${spring.embedded.kafka.brokers}
        properties:
            schema.registry.url: http://localhost:8081
        consumer:
            group-id: KafkaTest
            auto-offset-reset: earliest
            key-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            properties:
                specific.avro.reader: true
        producer:
            key-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    application:
        name: KafkaTest
    mail:
        host: localhost
    main:
        allow-bean-definition-overriding: true
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    task:
        execution:
            thread-name-prefix: kafka-test-task-
            pool:
                core-size: 1
                max-size: 50
                queue-capacity: 10000
        scheduling:
            thread-name-prefix: kafka-test-scheduling-
            pool:
                size: 1
    thymeleaf:
        mode: HTML

server:
    port: 10344
    address: localhost

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    clientApp:
        name: "kafkaTestApp"
    logging:
        # To test json console appender
        use-json-format: true # By default, logs are in Json format
        logstash:
            enabled: false
            host: localhost
            port: 5000
            queue-size: 512
    security:
        authentication:
            jwt:
                # This token must be encoded using Base64 (you can type `echo 'secret-key'|base64` on your command line)
                base64-secret: NGIyZDMxOTIzN2RiMWNjNzlhMzRjZGZjNjBhMTJhNzJjZWU2NGE0Mjk3YzkxNjA3ZWFlZTViNTNmNmQxMThmNzU1YTRkNTYyOTQxZTY4ODE2Nzg1MDNiYjM3MWYyYzU4MDRiNThhZGUzNjU1YzI3YWIyYjc4MjM1NDc3ZmE5MTQ=
                # Token is valid 24 hours
                token-validity-in-seconds: 86400
    metrics:
        logs: # Reports metrics in the logs
            enabled: true
            report-frequency: 60 # in seconds

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
